/**
**/
计算机中表示信息的机制：
计算机本身只能表示0和1两种状态
1、如何表示数量呢？
使用二进制规则   :   100  其实表示的量是十进制的4那么大
而且，计算机通常把8个二进制符号(bit)称为一个字节：byte

2、如何表示字符呢？
比如英文字母，标点符号，阿拉伯数字符号，汉字等？
需要先将这些信息按照某个码表（编码规则）转成"数"，然后再把“数”变成二进制
英文字母的国际通用编码规则： ascII码表 ，比如，其中“a” 要变成97 
汉字？有2中比较流行的编码规则：
a、GBK编码  --》英文字母，常用汉字， 一个汉字转换成2个byte的数字来存储
b、UTF-8编码  --》涵盖全球所有语言中的符号 ： 英文字母还是1个byte，但是中文字母通常是3个byte表示一个汉字，但不一定，有可能最长达到6个字节

3、如何表示图片信息？
jpg就是一种图像编码规则
gif
bmp

4、如何表示视频信息？
mp4
avi
wmv
rmvb

5、如何表示音频信息？
mp3
wma
cda

根本原则：  任何信息要在计算机中表示，都需要按照某种编码规则先将信息变成--》数， 数再变成二进制


/**

**/

java的文件io体系中常用的工具：

1、文件管理  File类
创建文件、删除文件、重命名文件、移动文件
File

2、文件内容的读input、写output
/**
文件读写
**/
1、文件中存的是什么？ 数（2进制数）  10101001001001001010100101001011111010100100000001010101010
2、用java去读写文件中的数据

/** 最底层的工具：  **/
读： FileInputStream  ：文件输入流

InputStream fis = new FileInputStream("d:/a.txt");

int read = fis.read();   // 读一个字节，并将这个字节转成整数返回，如果读完文件末尾最后一个字节，你还读，就返回 -1

byte[] buf = new byte[1024]
int num = fis.read(buf);   // 一次性连续读取1024个字节，如果已快到文件末尾，那么可能也读不到1024个字节，它会通过返回一个整数来告诉调用者究竟读了几个字节
如果在最后一次读取后，再读，就返回-1


/** 一个专门用来读文本文件的封装工具：BufferedReader  **/

BufferedReader br  = new BufferedReader(new InputStreamReader(new FileInputStream("d:/a.txt"),"UTF-8"));

String line = br.readLine();  //如果文件读完后还读，就返回 null

line = "";
while( (line=br.readLine())!=null ){
	
	System.out.println(line);
	
}
























